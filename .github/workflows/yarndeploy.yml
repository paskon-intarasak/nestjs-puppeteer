name: example deploy to local machine host

on:
  workflow_dispatch:

jobs:
  build:
    name: start example deployments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use NodeJS ${{ matrix.node-version }} for build testing
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: true

      - name: Build Project
        run: pnpm build

      - name: Login into dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image to docker hub registery
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-puppeteer:$(echo $GITHUB_SHA | head -c7) .

      - name: Push image to docker hub registery
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-puppeteer:$(echo $GITHUB_SHA | head -c7)

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 1200 ${{ secrets.CLUSTER_ID }}

      # - name: install kubectl in local machine
      #   uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: run configmap
        run: sh run-configmap.sh

      # install helm
      - uses: azure/setup-helm@v4.2.0
        with:
          version: 'v3.13.3' # default is latest stable
        id: install

      - name: try to run helm
        run: helm upgrade --install nestjs-puppeteer k8s/nestjs-puppeteer -f k8s/nestjs-puppeteer/values.yaml --set image.tag=$(echo $GITHUB_SHA | head -c7)
